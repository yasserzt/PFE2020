{"version":3,"sources":["stackable-bower.js","stackable-bower.min.js"],"names":["_classCallCheck","instance","Constructor","TypeError","_createClass","defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","Object","defineProperty","key","protoProps","staticProps","prototype","Stackable","token","this","_token","_apiVersion","_apiUrl","value","callback","_get","err","res","containerId","query","itemId","data","_post","_put","obj","keys","map","join","path","endPoint","_queryString","$","ajax","url","type","context","document","body","success","response","error","params","paramsStr","encodeURIComponent","window"],"mappings":"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","file":"stackable-bower.min.js","sourcesContent":["'use strict';\n\nclass Stackable {\n    constructor(token) {\n        this._token = token;\n        this._apiVersion = 'v1';\n        this._apiUrl = 'https://api.stackable.space';\n    }\n\n    getContainers(callback) {\n        this._get('containers', function(err, res) {\n            callback(err, res);\n        });\n    }\n\n    getContainer(containerId, callback) {\n        this._get(`containers/${containerId}`, function(err, res) {\n            callback(err, res);\n        });\n    }\n\n    getContainerItems(containerId, query, callback) {\n        if (typeof callback === 'undefined') {\n            callback = query;\n            query = {};\n        }\n\n        this._get(`containers/${containerId}/items`, query, function(err, res) {\n            callback(err, res);\n        });\n    }\n\n    getAllItems(query, callback) {\n        if (typeof callback === 'undefined') {\n            callback = query;\n            query = {};\n        }\n\n        this._get('items', query, function(err, res) {\n            callback(err, res);\n        });\n    }\n\n    getItem(itemId, query, callback) {\n        if (typeof callback === 'undefined') {\n            callback = query;\n            query = {};\n        }\n\n        this._get(`items/${itemId}`, query, function(err, res) {\n            callback(err, res);\n        });\n    }\n\n    createItem(containerId, data, callback) {\n        this._post('items', {containerId}, data, function(err, res) {\n            callback(err, res);\n        });\n    }\n\n    updateItem(itemId, data, callback) {\n        this._put(`items/${itemId}`, data, function(err, res) {\n            callback(err, res);\n        });\n    }\n\n    _queryString(obj) {\n        return Object.keys(obj).map(function(key) {\n            return key + '=' + obj[key];\n        }).join('&');\n    }\n\n    _get(path, query, callback) {\n        let endPoint = `${this._apiUrl}/${this._apiVersion}/${path}?token=${this._token}&${this._queryString(query)}`;\n\n        //is browser\n        $.ajax({\n            url: endPoint,\n            type: 'GET',\n            context: document.body,\n            success: function(response) {\n                callback(false, response);\n            },\n            error: function(err) {\n                callback(err, false);\n            }\n        });\n    }\n\n    _post(path, params, data, callback) {\n        let endPoint = `${this._apiUrl}/${this._apiVersion}/${path}?token=${this._token}`;\n\n        var paramsStr = '';\n        for (var key in params) {\n            if (paramsStr != '') {\n                paramsStr += '&';\n            }\n            paramsStr += key + '=' + encodeURIComponent(params[key]);\n        }\n\n        if (paramsStr.length > 0) {\n            endPoint = endPoint + '&' + paramsStr;\n        }\n\n        //is browser\n        $.ajax({\n            url: endPoint,\n            type: 'POST',\n            context: document.body,\n            data: data,\n            success: function(response) {\n                callback(false, response);\n            },\n            error: function(err) {\n                callback(err, false);\n            }\n        });\n    }\n\n    _put(path, data, callback) {\n        let endPoint = `${this._apiUrl}/${this._apiVersion}/${path}?token=${this._token}`;\n\n        //is browser\n        $.ajax({\n            url: endPoint,\n            type: 'PUT',\n            context: document.body,\n            data: data,\n            success: function(response) {\n                callback(false, response);\n            },\n            error: function(err) {\n                callback(err, false);\n            }\n        });\n    }\n}\n\nwindow.Stackable = Stackable;\n","'use strict';\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar Stackable = function () {\n    function Stackable(token) {\n        _classCallCheck(this, Stackable);\n\n        this._token = token;\n        this._apiVersion = 'v1';\n        this._apiUrl = 'https://api.stackable.space';\n    }\n\n    _createClass(Stackable, [{\n        key: 'getContainers',\n        value: function getContainers(callback) {\n            this._get('containers', function (err, res) {\n                callback(err, res);\n            });\n        }\n    }, {\n        key: 'getContainer',\n        value: function getContainer(containerId, callback) {\n            this._get('containers/' + containerId, function (err, res) {\n                callback(err, res);\n            });\n        }\n    }, {\n        key: 'getContainerItems',\n        value: function getContainerItems(containerId, query, callback) {\n            if (typeof callback === 'undefined') {\n                callback = query;\n                query = {};\n            }\n\n            this._get('containers/' + containerId + '/items', query, function (err, res) {\n                callback(err, res);\n            });\n        }\n    }, {\n        key: 'getAllItems',\n        value: function getAllItems(query, callback) {\n            if (typeof callback === 'undefined') {\n                callback = query;\n                query = {};\n            }\n\n            this._get('items', query, function (err, res) {\n                callback(err, res);\n            });\n        }\n    }, {\n        key: 'getItem',\n        value: function getItem(itemId, query, callback) {\n            if (typeof callback === 'undefined') {\n                callback = query;\n                query = {};\n            }\n\n            this._get('items/' + itemId, query, function (err, res) {\n                callback(err, res);\n            });\n        }\n    }, {\n        key: 'createItem',\n        value: function createItem(containerId, data, callback) {\n            this._post('items', { containerId: containerId }, data, function (err, res) {\n                callback(err, res);\n            });\n        }\n    }, {\n        key: 'updateItem',\n        value: function updateItem(itemId, data, callback) {\n            this._put('items/' + itemId, data, function (err, res) {\n                callback(err, res);\n            });\n        }\n    }, {\n        key: '_queryString',\n        value: function _queryString(obj) {\n            return Object.keys(obj).map(function (key) {\n                return key + '=' + obj[key];\n            }).join('&');\n        }\n    }, {\n        key: '_get',\n        value: function _get(path, query, callback) {\n            var endPoint = this._apiUrl + '/' + this._apiVersion + '/' + path + '?token=' + this._token + '&' + this._queryString(query);\n\n            //is browser\n            $.ajax({\n                url: endPoint,\n                type: 'GET',\n                context: document.body,\n                success: function success(response) {\n                    callback(false, response);\n                },\n                error: function error(err) {\n                    callback(err, false);\n                }\n            });\n        }\n    }, {\n        key: '_post',\n        value: function _post(path, params, data, callback) {\n            var endPoint = this._apiUrl + '/' + this._apiVersion + '/' + path + '?token=' + this._token;\n\n            var paramsStr = '';\n            for (var key in params) {\n                if (paramsStr != '') {\n                    paramsStr += '&';\n                }\n                paramsStr += key + '=' + encodeURIComponent(params[key]);\n            }\n\n            if (paramsStr.length > 0) {\n                endPoint = endPoint + '&' + paramsStr;\n            }\n\n            //is browser\n            $.ajax({\n                url: endPoint,\n                type: 'POST',\n                context: document.body,\n                data: data,\n                success: function success(response) {\n                    callback(false, response);\n                },\n                error: function error(err) {\n                    callback(err, false);\n                }\n            });\n        }\n    }, {\n        key: '_put',\n        value: function _put(path, data, callback) {\n            var endPoint = this._apiUrl + '/' + this._apiVersion + '/' + path + '?token=' + this._token;\n\n            //is browser\n            $.ajax({\n                url: endPoint,\n                type: 'PUT',\n                context: document.body,\n                data: data,\n                success: function success(response) {\n                    callback(false, response);\n                },\n                error: function error(err) {\n                    callback(err, false);\n                }\n            });\n        }\n    }]);\n\n    return Stackable;\n}();\n\nwindow.Stackable = Stackable;"],"sourceRoot":"/source/"}